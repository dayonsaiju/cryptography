import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import javax.crypto.Cipher;
import java.util.Base64;
import java.util.Scanner;


public class Rsa {
    public static void main(String[] args) {

        try {
            Scanner sc=new Scanner(System.in);

            KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
            keyGen.initialize(2048);
            KeyPair kp = keyGen.generateKeyPair();
            PublicKey pubKey = kp.getPublic();
            PrivateKey privKey = kp.getPrivate();

            System.out.println("Enter the Message to be encrypted : ");
            String message = sc.nextLine();
            System.out.println("Original Message : " +message);

            //Encryption
            Cipher encCipher = Cipher.getInstance("RSA");
            encCipher.init(Cipher.ENCRYPT_MODE, pubKey);
            byte[] encryptedBytes = encCipher.doFinal(message.getBytes());
            String encryptedString = Base64.getEncoder().encodeToString(encryptedBytes);
            System.out.println("Encrypted Message : " +encryptedString);

            //Decryption
            Cipher decCipher = Cipher.getInstance("RSA");
            decCipher.init(Cipher.DECRYPT_MODE, privKey);
            byte[] decodeBytes =Base64.getDecoder().decode(encryptedString);
            byte[] decryptedBytes = decCipher.doFinal(decodeBytes);
            String decryptedString = new String(decryptedBytes);
            System.out.println("Decrypted Message : " +decryptedString);
        }catch (Exception e) {
            e.printStackTrace();
        }
    }
}
